Parameters:
  LatestAmiId:
    Description: AMI for JFT Instance with Wordpress and MariaDB (default is latest AmaLinux2)
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Name of an existing SSH Keypair to access the instance"
    Default: JFT
  SSMKey:
    Description: Name of parameter store which contains the json configuration of CWAgent.
    Type : String
    Default: AmazonCloudWatch-linux
Resources:
  WordpressLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData: 
        KeyName: !Ref KeyName
        InstanceType: "t2.micro"
        ImageId: !Ref LatestAmiId
        IamInstanceProfile: 
          Name: !ImportValue jft-vpc1-wordpress-instanceprofile
        SecurityGroupIds: 
          - !ImportValue jft-vpc1-default-instance-sg
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            # Check for updates
            yum -y update
            # Set Configuration Parameters stored in Systems Manager
            DBPassword=$(aws ssm get-parameters --region us-east-1 --names /JFT/Wordpress/DBPassword --with-decryption --query Parameters[0].Value)
            DBPassword=`echo $DBPassword | sed -e 's/^"//' -e 's/"$//'`
            DBUser=$(aws ssm get-parameters --region us-east-1 --names /JFT/Wordpress/DBUser --query Parameters[0].Value)
            DBUser=`echo $DBUser | sed -e 's/^"//' -e 's/"$//'`
            DBName=$(aws ssm get-parameters --region us-east-1 --names /JFT/Wordpress/DBName --query Parameters[0].Value)
            DBName=`echo $DBName | sed -e 's/^"//' -e 's/"$//'`
            
            # Assign endpoints for DB and VPC
            jftdbendpoint=$(aws cloudformation list-exports --region us-east-1 --query 'Exports[?Name==`jft-db-endpoint`].Value' --output text)
            jftvpc1wordpressefs=$(aws cloudformation list-exports --region us-east-1 --query 'Exports[?Name==`jft-vpc1-wordpress-efs`].Value' --output text)

            # Install necessary software - MariaDB and AWS Utils
            yum -y install httpd wget mariadb amazon-efs-utils
            amazon-linux-extras install -y php7.2
            amazon-linux-extras install epel -y
            yum install stress -y
            systemctl enable httpd
            systemctl start httpd

            mkdir -p /var/www/html/wp-content
            chown -R ec2-user:apache /var/www/
            echo -e "$jftvpc1wordpressefs:/ /var/www/html/wp-content efs _netdev,tls,iam 0 0" >> /etc/fstab
            mount -a -t efs defaults

            # Install CloudWatch latest agent for monitoring
            rpm -Uvh https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
            mkdir -p /usr/share/collectd/
            touch /usr/share/collectd/types.db
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c ssm:${SSMKey} -s

            # Install Wordpress and then remove unecessary installation files
            wget http://wordpress.org/latest.tar.gz -P /var/www/html
            cd /var/www/html
            tar -zxvf latest.tar.gz
            cp -rvf wordpress/* .
            rm -R wordpress
            rm latest.tar.gz
            echo "<html><head><title>test</title></head><body>test</body></html>" > /var/www/html/healthcheck.html

            # Assign parameters from variables called earlier
            cp ./wp-config-sample.php ./wp-config.php
            sed -i "s/'localhost'/'$jftdbendpoint'/g" wp-config.php
            sed -i "s/'database_name_here'/'$DBName'/g" wp-config.php
            sed -i "s/'username_here'/'$DBUser'/g" wp-config.php
            sed -i "s/'password_here'/'$DBPassword'/g" wp-config.php

            # Grant permissions to user
            usermod -a -G apache ec2-user   
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;

            # Create Update File
            cat >> /home/ec2-user/update_wp_ip.sh<< 'EOF'
            #!/bin/bash
            source <(php -r 'require("/var/www/html/wp-config.php"); echo("DB_NAME=".DB_NAME."; DB_USER=".DB_USER."; DB_PASSWORD=".DB_PASSWORD."; DB_HOST=".DB_HOST); ')
            SQL_COMMAND="mysql -u $DB_USER -h $DB_HOST -p$DB_PASSWORD $DB_NAME -e"
            OLD_URL=$(mysql -u $DB_NAME -h $DB_HOST -p$DB_PASSWORD $DB_NAME -e 'select option_value from wp_options where option_id = 1;' | grep http)
            HOST=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
            $SQL_COMMAND "UPDATE wp_options SET option_value = replace(option_value, '$OLD_URL', 'http://$HOST') WHERE option_name = 'home' OR option_name = 'siteurl';"
            $SQL_COMMAND "UPDATE wp_posts SET guid = replace(guid, '$OLD_URL','http://$HOST');"
            $SQL_COMMAND "UPDATE wp_posts SET post_content = replace(post_content, '$OLD_URL', 'http://$HOST');"
            $SQL_COMMAND "UPDATE wp_postmeta SET meta_value = replace(meta_value,'$OLD_URL','http://$HOST');"
            EOF

            chmod 755 /home/ec2-user/update_wp_ip.sh
            echo "/home/ec2-user/update_wp_ip.sh" >> /etc/rc.local
            /home/ec2-user/update_wp_ip.sh
Outputs:
  JFTWordpressLaunchTemplate:
    Description: JFT Wordpress Launch Template
    Value: !Ref WordpressLaunchTemplate
    Export:
      Name: jft-vpc1-wordpress-launchtemplate